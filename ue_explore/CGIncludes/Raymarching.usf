// ----2d sdf----

float sdCircle(float2 uv,float2 pos,float radius)
{
    return distance(uv,pos) - radius;
}

// ----2d sdf----


// ----3d sdf----

float sdSphere(float3 sp,float3 center,float radius)
{
    return distance(sp,center) - radius;
}

// ----3d sdf----

float3 raymarch(float3 ro,float3 rd)
{
    float step = 1.0;
}

float3 sdfScene(float3 ro,float3 rd,float maxDist,float step)
{
    float3 spherePos = float3(0,0,0);
    float sphereRadius = 1.0;

    for( float t = 0.0; t < maxDist ; t+= step )
    {
        float3 sp = ro + rd * t;
        float dist = sdSphere(sp,spherePos,sphereRadius);
    }
}

// raymarch tex3d
float raymarch_tex3d(Texture3D DistanceField,SamplerState DistanceFieldSampler,float3 boundMin,float3 boundMax,float3 ro,float3 re,float step)
{
    float result;
    float DIST = distance(ro,re);
    float3 rd = normalize(re - ro);
    float steps = DIST / step;
    for(float dist = 0;dist < DIST;dist += step)
    {
        float3 sp = ro + rd * dist;
        float3 t = (sp - boundMin) / (boundMax - boundMin);
        float d = DistanceField.SampleLevel(DistanceFieldSampler,t,0).r;
        result += d / steps;
    }
    return result;
}